{"ast":null,"code":"import _classCallCheck from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/myapp/src/ViewPanel.js\";\nimport React, { Component } from 'react'; //import tasks from './tasks1.json';\n\nimport './App.css';\nimport Prism from 'prismjs';\nimport \"./prism.css\";\nimport { HtmlRenderer, Parser } from 'commonmark';\nimport { Container, Row, Col, Jumbotron, TabContent, TabPane, Nav, NavItem, NavLink, Dropdown, DropdownItem, DropdownToggle, DropdownMenu, Alert, Progress, ButtonGroup, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nvar ViewPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ViewPanel, _Component);\n\n  function ViewPanel(props) {\n    _classCallCheck(this, ViewPanel);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ViewPanel).call(this));\n  }\n\n  _createClass(ViewPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Prism.highlightAll();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var contenta = \"\";\n      contenta = this.props.tasks[this.props.curTask].instructions;\n      var task = this.props.tasks[this.props.curTask];\n      console.log('enter', contenta);\n      var parser = new Parser();\n      var renderer = new HtmlRenderer();\n      var ins = renderer.render(parser.parse(contenta));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: ins\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })))), React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          _this.showAddForm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Add\"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.openEditModal.bind(this, task),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Update\"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.handleDelete.bind(this, task),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Delete\"))));\n    }\n  }]);\n\n  return ViewPanel;\n}(Component);\n\nexport default ViewPanel;","map":{"version":3,"sources":["/var/www/html/myapp/src/ViewPanel.js"],"names":["React","Component","Prism","HtmlRenderer","Parser","Container","Row","Col","Jumbotron","TabContent","TabPane","Nav","NavItem","NavLink","Dropdown","DropdownItem","DropdownToggle","DropdownMenu","Alert","Progress","ButtonGroup","Button","Form","FormGroup","Label","Input","ViewPanel","props","highlightAll","contenta","tasks","curTask","instructions","task","console","log","parser","renderer","ins","render","parse","__html","showAddForm","openEditModal","bind","handleDelete"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,aAAP;AACA,SAASC,YAAT,EAAuBC,MAAvB,QAAqC,YAArC;AACA,SACEC,SADF,EACYC,GADZ,EACgBC,GADhB,EACoBC,SADpB,EAEEC,UAFF,EAEcC,OAFd,EAEsBC,GAFtB,EAE2BC,OAF3B,EAEoCC,OAFpC,EAGEC,QAHF,EAGYC,YAHZ,EAG0BC,cAH1B,EAG0CC,YAH1C,EAIEC,KAJF,EAIQC,QAJR,EAKEC,WALF,EAKcC,MALd,EAMEC,IANF,EAMQC,SANR,EAMmBC,KANnB,EAM0BC,KAN1B,QAOO,YAPP;;IASMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AAElB;;;;wCACmB;AAClBzB,MAAAA,KAAK,CAAC0B,YAAN;AACD;;;6BACQ;AAAA;;AACP,UAAIC,QAAQ,GAAC,EAAb;AACAA,MAAAA,QAAQ,GAAG,KAAKF,KAAL,CAAWG,KAAX,CAAiB,KAAKH,KAAL,CAAWI,OAA5B,EAAqCC,YAAhD;AACA,UAAIC,IAAI,GAAG,KAAKN,KAAL,CAAWG,KAAX,CAAiB,KAAKH,KAAL,CAAWI,OAA5B,CAAX;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBN,QAApB;AACA,UAAIO,MAAM,GAAG,IAAIhC,MAAJ,EAAb;AACA,UAAIiC,QAAQ,GAAG,IAAIlC,YAAJ,EAAf;AACA,UAAImC,GAAG,GAAGD,QAAQ,CAACE,MAAT,CAAgBH,MAAM,CAACI,KAAP,CAAaX,QAAb,CAAhB,CAAV;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM;AAAK,QAAA,uBAAuB,EAAE;AAACY,UAAAA,MAAM,EAAEH;AAAT,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,CAAL,CADF,CADA,EAKA,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,KAAI,CAACI,WAAL;AAAqB,SAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,KAAKC,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,EAA8BX,IAA9B,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAwB,QAAA,OAAO,EAAE,KAAKY,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,EAA6BX,IAA7B,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CADF,CALA,CADF;AAeD;;;;EA9BqBhC,S;;AAgCxB,eAAeyB,SAAf","sourcesContent":["import React, { Component } from 'react';\n//import tasks from './tasks1.json';\nimport './App.css';\nimport Prism from 'prismjs';\nimport \"./prism.css\";\nimport { HtmlRenderer, Parser } from 'commonmark';\nimport { \n  Container,Row,Col,Jumbotron,\n  TabContent, TabPane,Nav, NavItem, NavLink,\n  Dropdown, DropdownItem, DropdownToggle, DropdownMenu, \n  Alert,Progress,\n  ButtonGroup,Button,\n  Form, FormGroup, Label, Input,\n} from 'reactstrap';\n\nclass ViewPanel extends Component {\n  constructor(props) {\n    super();\n  }\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n  render() {\n    let contenta=\"\";\n    contenta = this.props.tasks[this.props.curTask].instructions;\n    let task = this.props.tasks[this.props.curTask];\n    console.log('enter',contenta);\n    let parser = new Parser()\n    let renderer = new HtmlRenderer()\n    let ins = renderer.render(parser.parse(contenta));\n    return (\n      <div>\n      <Col sm=\"12\">\n        <pre><code><div dangerouslySetInnerHTML={{__html: ins}}></div>\n         </code></pre>     \n      </Col>\n      <Col sm=\"12\">\n        <ButtonGroup>\n          <Button color=\"primary\" onClick={() => { this.showAddForm(); }}>Add</Button>\n          <Button color=\"primary\" onClick={this.openEditModal.bind(this, task)}>Update</Button>\n          <Button color=\"primary\" onClick={this.handleDelete.bind(this, task)}>Delete</Button>\n        </ButtonGroup>\n      </Col>\n      </div>\n      );     \n  }\n}\nexport default ViewPanel;\n"]},"metadata":{},"sourceType":"module"}