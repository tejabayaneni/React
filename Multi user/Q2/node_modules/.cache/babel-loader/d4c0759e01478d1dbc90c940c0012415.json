{"ast":null,"code":"import _defineProperty from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/myapp/src/App.js\";\nimport React, { Component } from 'react';\nimport sampleTasks from './tasks1.json';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Container, Row, Col, ButtonGroup, Button, ListGroup } from 'react-bootstrap';\nimport ViewPanel from './ViewPanel.js';\nimport classnames from 'classnames';\nimport Prism from 'prismjs';\nimport \"./prism.css\";\nimport { HtmlRenderer, Parser } from 'commonmark';\nimport { Jumbotron, TabContent, TabPane, Nav, NavItem, Dropdown, DropdownItem, DropdownToggle, DropdownMenu, NavLink } from 'reactstrap';\nimport 'whatwg-fetch';\nimport config from './config.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this$state;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = (_this$state = {\n      tasks: sampleTasks,\n      curTask: 0,\n      mode: \"view\",\n      activeTab: 0\n    }, _defineProperty(_this$state, \"tasks\", []), _defineProperty(_this$state, \"loadingTasks\", false), _this$state);\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Prism.highlightAll();\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('enter', this.state.activeTab);\n      var curTask = this.state.tasks[this.state.activeTab];\n      var curIns = this.state.tasks[this.state.activeTab].instructions;\n      var that = this;\n      var listItems = this.state.tasks.map(function (item, i) {\n        return React.createElement(NavItem, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          className: classnames({\n            active: that.state.activeTab === i\n          }),\n          onClick: function onClick() {\n            that.toggle(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, item[\"task-name\"]));\n      });\n      var parser = new Parser();\n      var renderer = new HtmlRenderer(); //let ins = renderer.render(parser.parse(curTask.instructions));\n\n      var listTabs = this.state.tasks.map(function (item, i) {\n        var ins = renderer.render(parser.parse(item.instructions));\n        var active = '';\n\n        if (i === that.state.activeTab) {\n          active = 'active';\n        } else {\n          active = '';\n        }\n\n        return React.createElement(TabContent, {\n          vertical: true,\n          activeTab: \"{this.state.activeTab}\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(TabPane, {\n          tabId: \"{i}\",\n          className: active,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"pre\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"code\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: ins\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        })))))));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Title here\"), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        vertical: true,\n        tabs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, listItems)), React.createElement(Col, {\n        sm: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, listTabs))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/myapp/src/App.js"],"names":["React","Component","sampleTasks","Container","Row","Col","ButtonGroup","Button","ListGroup","ViewPanel","classnames","Prism","HtmlRenderer","Parser","Jumbotron","TabContent","TabPane","Nav","NavItem","Dropdown","DropdownItem","DropdownToggle","DropdownMenu","NavLink","config","App","props","toggle","bind","state","tasks","curTask","mode","activeTab","highlightAll","tab","setState","console","log","curIns","instructions","that","listItems","map","item","i","active","parser","renderer","listTabs","ins","render","parse","__html"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport sampleTasks from './tasks1.json';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Container,Row,Col,ButtonGroup,Button,ListGroup } from 'react-bootstrap';\nimport ViewPanel from './ViewPanel.js'\n\nimport classnames from 'classnames';\nimport Prism from 'prismjs';\nimport \"./prism.css\";\nimport { HtmlRenderer, Parser } from 'commonmark';\nimport { Jumbotron,TabContent, TabPane,Nav, NavItem, Dropdown, DropdownItem, DropdownToggle, DropdownMenu, NavLink } from 'reactstrap';\nimport 'whatwg-fetch';\nimport config from './config.js';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.toggle = this.toggle.bind(this);\n    this.state={\n      tasks:sampleTasks,\n      curTask:0,\n      mode:\"view\",\n      activeTab: 0,\n      tasks:[],\n      loadingTasks: false,\n    }\n    \n  }\n\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n  \n  render() {\n    console.log('enter',this.state.activeTab);\n    let curTask = this.state.tasks[this.state.activeTab];\n    let curIns = this.state.tasks[this.state.activeTab].instructions;\n    let that=this;\n    let listItems=this.state.tasks.map(function(item,i){\n      return(\n        <NavItem key={i}>\n          <NavLink\n            className={classnames({ active: that.state.activeTab === i })}\n            onClick={() => { that.toggle(i); }}\n          >\n            {item[\"task-name\"]}\n          </NavLink>\n        </NavItem>\n      );\n    })\n    \n    let parser = new Parser()\n    let renderer = new HtmlRenderer()\n    //let ins = renderer.render(parser.parse(curTask.instructions));\n    \n    let listTabs=this.state.tasks.map(function(item,i){\n      let ins = renderer.render(parser.parse(item.instructions));\n      let active = '';\n      if(i===that.state.activeTab){\n        active = 'active';\n      }else{\n        active = '';\n      }\n      return(\n        <TabContent vertical activeTab=\"{this.state.activeTab}\">\n        <TabPane tabId=\"{i}\" className={active}>\n          <Row>\n            <Col sm=\"12\">\n            <pre>\n            <code >\n            {/* {curTask.instructions} */}\n            <div dangerouslySetInnerHTML={{__html: ins}}></div>\n            </code>\n            </pre>\n            \n              {/* <h4>{curTask.instructions}</h4> */}\n            </Col>\n          </Row>\n        </TabPane>\n        </TabContent>\n    );\n  })\n\n    return(\n        <div>\n          <h1>Title here</h1>\n          <Row>\n          <Col sm=\"3\">\n            <Nav vertical tabs>\n              {listItems}\n            </Nav>\n          </Col>\n          <Col sm=\"9\">\n            <Jumbotron>\n            {listTabs}\n            </Jumbotron>\n          </Col>\n          </Row>\n        </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}