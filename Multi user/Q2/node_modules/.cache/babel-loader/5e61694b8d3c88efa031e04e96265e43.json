{"ast":null,"code":"import _classCallCheck from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/myapp/src/App.js\";\nimport React, { Component } from 'react';\nimport sampleTasks from './tasks1.json';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { Container, Row, Col, ButtonGroup, Button, ListGroup } from 'react-bootstrap';\nimport ViewPanel from './ViewPanel.js';\nimport classnames from 'classnames';\nimport Prism from 'prismjs';\nimport \"./prism.css\";\nimport { HtmlRenderer, Parser } from 'commonmark';\nimport { Jumbotron, TabContent, TabPane, Nav, NavItem, NavLink, Dropdown, DropdownItem, DropdownToggle, DropdownMenu, Alert } from 'reactstrap';\nimport 'whatwg-fetch';\nimport config from './config.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      //tasks:sampleTasks,\n      curTask: 0,\n      mode: \"view\",\n      activeTab: 0,\n      tasks: [],\n      loadingTasks: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      Prism.highlightAll();\n      var url = config.API_URL + 'tasks';\n      fetch(url, {}).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        console.log('enter', json);\n\n        _this2.setState({\n          tasks: json.tasks,\n          loadingTasks: false\n        });\n      }, function (error) {\n        console.log('err', error);\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('enter', this.state.activeTab); //let curTask = this.state.tasks[this.state.activeTab];\n      //let curIns = this.state.tasks[this.state.activeTab].instructions;\n\n      var that = this;\n      var listItems = this.state.tasks.map(function (item, i) {\n        return React.createElement(NavItem, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          className: classnames({\n            active: that.state.activeTab === i\n          }),\n          onClick: function onClick() {\n            that.toggle(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, item[\"task-name\"]));\n      });\n      var parser = new Parser();\n      var renderer = new HtmlRenderer(); //let ins = renderer.render(parser.parse(curTask.instructions));\n\n      var listTabs = this.state.tasks.map(function (item, i) {\n        var ins = renderer.render(parser.parse(item.instructions));\n        var active = '';\n\n        if (i === that.state.activeTab) {\n          active = 'active';\n        } else {\n          active = '';\n        }\n\n        return React.createElement(TabContent, {\n          vertical: true,\n          activeTab: \"{this.state.activeTab}\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(TabPane, {\n          tabId: \"{i}\",\n          className: active,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"pre\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, React.createElement(\"code\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: ins\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        })))))));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Title here\"), listItems && listItems.length == 0 && React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Alert, {\n        className: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"No results found\")), listItems && listItems.length > 0 && React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        vertical: true,\n        tabs: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, listItems)), React.createElement(Col, {\n        sm: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, listTabs))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/myapp/src/App.js"],"names":["React","Component","sampleTasks","Container","Row","Col","ButtonGroup","Button","ListGroup","ViewPanel","classnames","Prism","HtmlRenderer","Parser","Jumbotron","TabContent","TabPane","Nav","NavItem","NavLink","Dropdown","DropdownItem","DropdownToggle","DropdownMenu","Alert","config","App","props","toggle","bind","state","curTask","mode","activeTab","tasks","loadingTasks","highlightAll","url","API_URL","fetch","then","res","json","console","log","setState","error","tab","that","listItems","map","item","i","active","parser","renderer","listTabs","ins","render","parse","instructions","__html","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport sampleTasks from './tasks1.json';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Container,Row,Col,ButtonGroup,Button,ListGroup } from 'react-bootstrap';\nimport ViewPanel from './ViewPanel.js'\n\nimport classnames from 'classnames';\nimport Prism from 'prismjs';\nimport \"./prism.css\";\nimport { HtmlRenderer, Parser } from 'commonmark';\nimport { Jumbotron,TabContent, TabPane,Nav, NavItem, NavLink,\n    Dropdown, DropdownItem, DropdownToggle, DropdownMenu, \n    Alert } from 'reactstrap';\nimport 'whatwg-fetch';\nimport config from './config.js';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.toggle = this.toggle.bind(this);\n    this.state={\n      //tasks:sampleTasks,\n      curTask:0,\n      mode:\"view\",\n      activeTab: 0,\n      tasks:[],\n      loadingTasks: false,\n    }\n    \n  }\n\n  componentDidMount() {\n    Prism.highlightAll();\n    \n    let url = config.API_URL+'tasks';\n    fetch(url,{}).then(res => res.json())\n    .then(json => {\n      console.log('enter',json);\n      this.setState({\n        tasks: json.tasks,\n        loadingTasks:false\n      });\n    }, error =>{\n      console.log('err',error);\n    });\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n  \n  render() {\n    console.log('enter',this.state.activeTab);\n    //let curTask = this.state.tasks[this.state.activeTab];\n    //let curIns = this.state.tasks[this.state.activeTab].instructions;\n    let that=this;\n    let listItems=this.state.tasks.map(function(item,i){\n      return(\n        <NavItem key={i}>\n          <NavLink\n            className={classnames({ active: that.state.activeTab === i })}\n            onClick={() => { that.toggle(i); }}\n          >\n            {item[\"task-name\"]}\n          </NavLink>\n        </NavItem>\n      );\n    })\n    \n    let parser = new Parser()\n    let renderer = new HtmlRenderer()\n    //let ins = renderer.render(parser.parse(curTask.instructions));\n    \n    let listTabs=this.state.tasks.map(function(item,i){\n      let ins = renderer.render(parser.parse(item.instructions));\n      let active = '';\n      if(i===that.state.activeTab){\n        active = 'active';\n      }else{\n        active = '';\n      }\n      return(\n        <TabContent vertical activeTab=\"{this.state.activeTab}\">\n        <TabPane tabId=\"{i}\" className={active}>\n          <Row>\n            <Col sm=\"12\">\n            <pre>\n            <code >\n            {/* {curTask.instructions} */}\n            <div dangerouslySetInnerHTML={{__html: ins}}></div>\n            </code>\n            </pre>\n            \n              {/* <h4>{curTask.instructions}</h4> */}\n            </Col>\n          </Row>\n        </TabPane>\n        </TabContent>\n    );\n  })\n\n    return(\n        <div>\n          <h1 className=\"text-center\">Title here</h1>\n          \n          { listItems && listItems.length == 0 &&\n            <Jumbotron>\n              <Alert className=\"danger\">No results found</Alert>\n            </Jumbotron>\n          }\n          { listItems && listItems.length > 0 &&\n          <Row>\n          <Col sm=\"3\">\n            <Nav vertical tabs>\n              {listItems}\n            </Nav>\n          </Col>\n          <Col sm=\"9\">\n            <Jumbotron>\n            {listTabs}\n            </Jumbotron>\n          </Col>\n          </Row>}\n\n        </div>\n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}