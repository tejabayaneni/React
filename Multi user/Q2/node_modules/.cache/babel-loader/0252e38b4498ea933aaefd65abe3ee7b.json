{"ast":null,"code":"import _objectSpread from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/myapp/src/App.js\";\nimport React, { Component } from 'react';\nimport sampleTasks from './tasks1.json';\nimport logo from \"./logo.svg\";\nimport './App.css'; //import { Container,Row,Col,ButtonGroup,Button,ListGroup } from 'react-bootstrap';\n//import ViewPanel from './ViewPanel.js'\n\nimport classnames from 'classnames';\nimport Prism from 'prismjs';\nimport \"./prism.css\";\nimport { HtmlRenderer, Parser } from 'commonmark';\nimport { Container, Row, Col, Jumbotron, TabContent, TabPane, Nav, NavItem, NavLink, Dropdown, DropdownItem, DropdownToggle, DropdownMenu, Alert, Progress, ButtonGroup, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport 'whatwg-fetch';\nimport config from './config.js';\nimport moment from 'moment';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      tasks: sampleTasks,\n      curTask: 0,\n      mode: \"view\",\n      activeTab: 0,\n      //tasks:[],\n      loadingTasks: false,\n      addForm: false,\n      error: '',\n      success: false,\n      deleteError: '',\n      deleteSuccess: false,\n      taskName: '',\n      dueDate: '',\n      dueTime: '00:00',\n      status: 'Open',\n      instructions: '',\n      editMode: false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showAddForm = _this.showAddForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Prism.highlightAll();\n      this.setState({\n        loadingTasks: true\n      }); // let url = config.API_URL+'tasks';\n      // fetch(url,{}).then(res => res.json())\n      // .then(json => {\n      //   //console.log('enter',json);\n      //   this.setState({\n      //     tasks: json.tasks,\n      //     loadingTasks:false\n      //   });\n      // }, error =>{\n      //   this.setState({ \n      //     loadingTasks:false,\n      //     error: 'Network error!'  \n      //   });\n      //   console.log('err',error);\n      // });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"showAddForm\",\n    value: function showAddForm() {\n      this.setState({\n        addForm: !this.state.addForm,\n        editMode: false,\n        taskName: '',\n        dueDate: '',\n        dueTime: '00:00',\n        status: 'Open',\n        instructions: ''\n      });\n    }\n  }, {\n    key: \"showEditForm\",\n    value: function showEditForm(data) {\n      var dueDate = moment(data.due).utc().format('YYYY-MM-DD');\n      var dueTime = moment(data.due).utc().format('HH:mm');\n      this.setState({\n        addForm: !this.state.addForm,\n        editMode: true,\n        taskName: data[\"task-name\"],\n        status: data.status,\n        dueDate: dueDate,\n        dueTime: dueTime,\n        instructions: data.instructions\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(evt) {\n      this.setState(_defineProperty({}, evt.target.name, evt.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      this.setState({\n        error: '',\n        success: false\n      });\n      var elements = this.state.tasks.slice();\n\n      if (!this.state.editMode) {\n        elements.push({\n          'task-name': this.state.taskName,\n          'due': this.state.dueDate + 'T' + this.state.dueTime + ':00.000Z',\n          'status': this.state.status,\n          'instructions': this.state.instructions\n        });\n      } else {\n        var nextState = this.state.tasks.map(function (task, index) {\n          if (_this2.state.taskName === task[\"task-name\"]) {\n            return _objectSpread({}, task, {\n              \"task-name\": _this2.state.taskName,\n              due: _this2.state.dueDate + 'T' + _this2.state.dueTime + ':00.000Z',\n              status: _this2.state.status,\n              instructions: _this2.state.instructions\n            });\n          }\n\n          return task;\n        });\n        elements = nextState;\n      }\n\n      this.setState({\n        success: true,\n        addForm: false,\n        tasks: elements\n      });\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(data) {\n      var _this3 = this;\n\n      console.log(data);\n      var method = 'DELETE';\n      var url = config.API_URL + 'tasks/' + data[\"task-name\"];\n      this.setState({\n        error: '',\n        success: false\n      });\n      fetch(url, {\n        method: method,\n        headers: {\n          'Content-Type': 'application/json'\n        } //body: JSON.stringify({ }) \n\n      }).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        if (json.success) {\n          var tasks = _this3.state.tasks.filter(function (task) {\n            return data[\"task-name\"] !== task[\"task-name\"];\n          });\n\n          _this3.setState(function (state) {\n            state.tasks = tasks;\n            state.deleteSuccess = true;\n            return state;\n          });\n        } else {\n          _this3.setState({\n            deleteError: 'Request Error!'\n          });\n        }\n      }, function (error) {\n        // this.setState({\n        //   error: error  \n        // });\n        console.log('err', error);\n\n        _this3.setState({\n          deleteError: 'Network error!'\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //let curTask = this.state.tasks[this.state.activeTab];\n      //let curIns = this.state.tasks[this.state.activeTab].instructions;\n      var that = this;\n      var listItems = this.state.tasks.map(function (item, i) {\n        return React.createElement(NavItem, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 201\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          className: classnames({\n            active: that.state.activeTab === i\n          }),\n          onClick: function onClick() {\n            that.toggle(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202\n          },\n          __self: this\n        }, item[\"task-name\"]));\n      });\n      var parser = new Parser();\n      var renderer = new HtmlRenderer();\n      var currentIns = renderer.render(parser.parse(this.state.instructions));\n      var synHtml = Prism.highlight(currentIns, Prism.languages.markup, 'markup');\n      var listTabs = this.state.tasks.map(function (item, i) {\n        var ins = renderer.render(parser.parse(item.instructions));\n        var active = '';\n\n        if (i === that.state.activeTab) {\n          active = 'active';\n        } else {\n          active = '';\n        }\n\n        var dueDate = moment(item.due).utc().format('dddd, MMMM Do YYYY, hh:mm A');\n        return React.createElement(TabContent, {\n          key: i,\n          vertical: true,\n          activeTab: \"{this.state.activeTab}\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, React.createElement(TabPane, {\n          tabId: \"{i}\",\n          className: active,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(\"pre\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, React.createElement(\"code\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: ins\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }))), \"Status: \", item.status, \", Due: \", dueDate), React.createElement(Col, {\n          sm: \"12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"primary\",\n          onClick: function onClick() {\n            that.showAddForm();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, \"Add\"), React.createElement(Button, {\n          color: \"primary\",\n          onClick: that.showEditForm.bind(that, item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, \"Update\"), React.createElement(Button, {\n          color: \"primary\",\n          onClick: that.handleDelete.bind(that, item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, \"Delete\"))))));\n      });\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Title here\")), this.state.success && React.createElement(Alert, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Successfully Added\"), this.state.deleteError !== '' && React.createElement(Alert, {\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Error: \", this.state.deleteError), this.state.deleteSuccess && React.createElement(Alert, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Successfully Deleted\"), this.state.addForm ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"taskName\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Col, {\n        sm: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(Input, {\n        disabled: this.state.editMode,\n        value: this.state.taskName,\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"taskName\",\n        id: \"taskName\",\n        placeholder: \"Enter task name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.status,\n        onChange: this.handleChange,\n        type: \"select\",\n        name: \"status\",\n        id: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Open\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Open\"), React.createElement(\"option\", {\n        value: \"Closed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Closed\")))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"dueDate\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"Due\"), React.createElement(Col, {\n        sm: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.dueDate,\n        onChange: this.handleChange,\n        type: \"date\",\n        name: \"dueDate\",\n        id: \"dueDate\",\n        placeholder: \"Enter due date\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.dueTime,\n        onChange: this.handleChange,\n        type: \"time\",\n        name: \"dueTime\",\n        id: \"dueTime\",\n        placeholder: \"Enter due time\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, React.createElement(Input, {\n        rows: 10,\n        value: this.state.instructions,\n        onChange: this.handleChange,\n        type: \"textarea\",\n        name: \"instructions\",\n        id: \"instructions\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }))), this.state.error !== '' && React.createElement(Alert, {\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304\n        },\n        __self: this\n      }, \"Error: \", this.state.error), React.createElement(FormGroup, {\n        check: true,\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, \"Commit\"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.showAddForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"Cancel\"))))), React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: synHtml\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }))))))) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, listItems && listItems.length == 0 && React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, this.state.error !== '' ? React.createElement(Alert, {\n        color: \"danger\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 335\n        },\n        __self: this\n      }, this.state.error) : React.createElement(Alert, {\n        color: \"warning\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, \"No results found\"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: function onClick() {\n          that.showAddForm();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }, \"Add\")), listItems && listItems.length > 0 && React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        vertical: true,\n        pills: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }, listItems)), React.createElement(Col, {\n        sm: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, listTabs)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/myapp/src/App.js"],"names":["React","Component","sampleTasks","classnames","Prism","HtmlRenderer","Parser","Container","Row","Col","Jumbotron","TabContent","TabPane","Nav","NavItem","NavLink","Dropdown","DropdownItem","DropdownToggle","DropdownMenu","Alert","Progress","ButtonGroup","Button","Form","FormGroup","Label","Input","config","moment","App","props","state","tasks","curTask","mode","activeTab","loadingTasks","addForm","error","success","deleteError","deleteSuccess","taskName","dueDate","dueTime","status","instructions","editMode","toggle","bind","showAddForm","handleChange","handleSubmit","highlightAll","setState","tab","data","due","utc","format","evt","target","name","value","event","preventDefault","elements","slice","push","nextState","map","task","index","console","log","method","url","API_URL","fetch","headers","then","res","json","filter","that","listItems","item","i","active","parser","renderer","currentIns","render","parse","synHtml","highlight","languages","markup","listTabs","ins","__html","showEditForm","handleDelete","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport sampleTasks from './tasks1.json';\nimport logo from './logo.svg';\nimport './App.css';\n//import { Container,Row,Col,ButtonGroup,Button,ListGroup } from 'react-bootstrap';\n//import ViewPanel from './ViewPanel.js'\n\nimport classnames from 'classnames';\nimport Prism from 'prismjs';\nimport \"./prism.css\";\nimport { HtmlRenderer, Parser } from 'commonmark';\nimport { \n    Container,Row,Col,Jumbotron,\n    TabContent, TabPane,Nav, NavItem, NavLink,\n    Dropdown, DropdownItem, DropdownToggle, DropdownMenu, \n    Alert,Progress,\n    ButtonGroup,Button,\n    Form, FormGroup, Label, Input,\n} from 'reactstrap';\nimport 'whatwg-fetch';\nimport config from './config.js';\nimport moment from 'moment';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state={\n      tasks:sampleTasks,\n      curTask:0,\n      mode:\"view\",\n      activeTab: 0,\n      //tasks:[],\n      loadingTasks: false,\n      addForm:false,\n      error:'',\n      success:false,\n      deleteError:'',\n      deleteSuccess:false,\n      taskName:'',\n      dueDate:'',\n      dueTime:'00:00',\n      status:'Open',\n      instructions:'',\n      editMode:false\n    }\n    \n    this.toggle = this.toggle.bind(this);\n    this.showAddForm = this.showAddForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    \n  }\n\n  componentDidMount() {\n    Prism.highlightAll();\n    \n    this.setState({ loadingTasks:true});\n\n    // let url = config.API_URL+'tasks';\n    // fetch(url,{}).then(res => res.json())\n    // .then(json => {\n    //   //console.log('enter',json);\n    //   this.setState({\n    //     tasks: json.tasks,\n    //     loadingTasks:false\n    //   });\n    // }, error =>{\n    //   this.setState({ \n    //     loadingTasks:false,\n    //     error: 'Network error!'  \n    //   });\n    //   console.log('err',error);\n    // });\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n  \n  showAddForm(){\n    this.setState({\n      addForm: !this.state.addForm,\n      editMode:false,\n      taskName:'',\n      dueDate:'',\n      dueTime:'00:00',\n      status:'Open',\n      instructions:'',\n    });\n  }\n\n  showEditForm (data) {\n    let dueDate = moment(data.due).utc().format('YYYY-MM-DD');\n    let dueTime = moment(data.due).utc().format('HH:mm');\n    \n    this.setState({\n       addForm: !this.state.addForm,\n       editMode:true,\n       taskName:data[\"task-name\"],\n       status:data.status,\n       dueDate:dueDate,\n       dueTime:dueTime,\n       instructions:data.instructions\n    });\n  }  \n\n  handleChange (evt) {\n    this.setState({ [evt.target.name]: evt.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();  \n    this.setState({\n      error: '',\n      success:false\n    });  \n    let elements = this.state.tasks.slice();\n    if(!this.state.editMode){\n      elements.push({\n        'task-name': this.state.taskName,\n        'due': this.state.dueDate+'T'+this.state.dueTime+':00.000Z',\n        'status': this.state.status,\n        'instructions': this.state.instructions\n      });\n    }else{\n      const nextState = this.state.tasks.map((task,index) => {\n          if(this.state.taskName === task[\"task-name\"]){\n            return {\n              ...task,\n              \"task-name\": this.state.taskName,\n              due: this.state.dueDate+'T'+this.state.dueTime+':00.000Z',\n              status: this.state.status,\n              instructions: this.state.instructions \n            }\n          }\n          return task;\n      });\n      elements = nextState;\n    }  \n    this.setState({\n      success: true,\n      addForm:false,\n      tasks:elements\n    });\n  }\n\n  handleDelete(data) {\n    console.log(data);\n    let method = 'DELETE';\n    let url = config.API_URL+'tasks/'+data[\"task-name\"];\n    \n    this.setState({\n      error: '',\n      success:false\n    });  \n    fetch(url, { \n        method: method,\n        headers: {'Content-Type':'application/json'},\n        //body: JSON.stringify({ }) \n    })\n    .then(res => res.json())\n    .then(json => {\n      if(json.success){\n        let tasks = this.state.tasks.filter((task) => {\n          return data[\"task-name\"] !== task[\"task-name\"];\n        });\n      \n        this.setState(state => {\n            state.tasks = tasks;\n            state.deleteSuccess= true;\n            return state;\n        });\n      }\n      else{\n        this.setState({\n          deleteError: 'Request Error!'\n        });  \n      }\n    }, error =>{\n      // this.setState({\n      //   error: error  \n      // });\n      console.log('err',error);\n      this.setState({\n        deleteError: 'Network error!'\n      });\n    });\n  }\n\n  render() {\n    //let curTask = this.state.tasks[this.state.activeTab];\n    //let curIns = this.state.tasks[this.state.activeTab].instructions;\n    let that=this;\n    let listItems=this.state.tasks.map(function(item,i){\n      return(\n        <NavItem key={i}>\n          <NavLink\n            className={classnames({ active: that.state.activeTab === i })}\n            onClick={() => { that.toggle(i); }}\n          >\n            {item[\"task-name\"]}\n          </NavLink>\n        </NavItem>\n      );\n    })\n    \n    let parser = new Parser()\n    let renderer = new HtmlRenderer()\n    \n    let currentIns = renderer.render(parser.parse(this.state.instructions));\n    let synHtml = Prism.highlight(currentIns, Prism.languages.markup, 'markup');\n\n    let listTabs=this.state.tasks.map(function(item,i){\n      let ins = renderer.render(parser.parse(item.instructions));\n      let active = '';\n      if(i===that.state.activeTab){\n        active = 'active';\n      }else{\n        active = '';\n      }\n      let dueDate = moment(item.due).utc().format('dddd, MMMM Do YYYY, hh:mm A');\n      \n      return(\n        <TabContent key={i} vertical activeTab=\"{this.state.activeTab}\">\n        <TabPane tabId=\"{i}\" className={active}>\n          <Row>\n            <Col sm=\"12\">\n            <pre>\n            <code >\n            {/* {curTask.instructions} */}\n            <div dangerouslySetInnerHTML={{__html: ins}}></div>\n            </code>\n            </pre>\n            Status: {item.status}, Due: {dueDate}\n            \n              {/* <h4>{curTask.instructions}</h4> */}\n            </Col>\n            <Col sm=\"12\">\n              <ButtonGroup>\n                <Button color=\"primary\" onClick={() => { that.showAddForm(); }}>Add</Button>\n                <Button color=\"primary\" onClick={that.showEditForm.bind(that, item)}>Update</Button>\n                <Button color=\"primary\" onClick={that.handleDelete.bind(that, item)}>Delete</Button>\n              </ButtonGroup>\n            </Col>\n          </Row>\n        </TabPane>\n        </TabContent>\n    );\n  })\n\n    return(\n        <Container>\n          <Container><h1 className=\"text-center\">Title here</h1></Container>\n          {this.state.success && <Alert color=\"success\">Successfully Added</Alert>} \n          {this.state.deleteError !== '' && <Alert color=\"warning\">Error: {this.state.deleteError}</Alert>}\n          {this.state.deleteSuccess && <Alert color=\"success\">Successfully Deleted</Alert>}  \n\n          { this.state.addForm ?\n          <div>\n            <Row>\n            <Col sm=\"6\">\n            <Form onSubmit={this.handleSubmit}>\n              <FormGroup row>\n                <Label for=\"taskName\" sm={3}>Name</Label>\n                <Col sm={5}>\n                  <Input disabled={this.state.editMode} value={this.state.taskName} onChange={this.handleChange} type=\"text\" name=\"taskName\" id=\"taskName\" placeholder=\"Enter task name\" required/>\n                </Col>\n                <Col sm=\"4\">\n                <Input value={this.state.status} onChange={this.handleChange} type=\"select\" name=\"status\" id=\"status\">\n                  <option value=\"Open\">Open</option>\n                  <option value=\"Closed\">Closed</option>\n                </Input>\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Label for=\"dueDate\" sm={3}>Due</Label>\n                <Col sm={5}>\n                  <Input value={this.state.dueDate} onChange={this.handleChange} type=\"date\" name=\"dueDate\" id=\"dueDate\" placeholder=\"Enter due date\" required />\n                </Col>\n                <Col sm=\"4\">\n                  <Input value={this.state.dueTime} onChange={this.handleChange}  type=\"time\" name=\"dueTime\" id=\"dueTime\" placeholder=\"Enter due time\" required />\n                </Col>                \n              </FormGroup>\n              {/* <FormGroup tag=\"fieldset\" row>\n                <Label for=\"status\" sm={3}>Status</Label>\n                <Col sm={9}>\n                  <Input value={this.state.status} onChange={this.handleChange} type=\"select\" name=\"status\" id=\"status\">\n                  <option value=\"Open\">Open</option>\n                  <option value=\"Closed\">Closed</option>\n                </Input>\n              </Col>\n              </FormGroup> */}\n              <FormGroup row>\n                {/* <Label for=\"instructions\" sm={3}>Instructions</Label> */}\n                <Col sm={12}>\n                  <Input rows={10} value={this.state.instructions} onChange={this.handleChange} type=\"textarea\" name=\"instructions\" id=\"instructions\" required />\n                </Col>\n              </FormGroup>\n              {this.state.error !== '' && <Alert color=\"warning\">Error: {this.state.error}</Alert>}\n              {/* {this.state.success && <Alert color=\"success\">Successfully Added</Alert>}   */}\n              <FormGroup check row>\n                <ButtonGroup>\n                  <Button color=\"primary\" >Commit</Button>\n                  <Button color=\"primary\" onClick={this.showAddForm}>Cancel</Button>\n                </ButtonGroup>\n              </FormGroup>\n            </Form>\n            </Col>\n            <Col sm=\"6\">\n              <div>\n                <pre>\n                  <code className=\"language-markup\">\n                  <div dangerouslySetInnerHTML={{__html: synHtml}}></div>\n                  </code>\n                </pre>\n              </div>\n            </Col>\n            </Row>\n          </div>\n          :\n           \n          <div>\n          {/* { this.state.loadingTasks && \n            <Progress animated color=\"warning\" value=\"100\" />\n          }\n          */}\n          { listItems && listItems.length == 0 &&\n            <Col sm=\"12\">\n            {this.state.error !== '' ?\n              <Alert color=\"danger\" className=\"text-center\">{this.state.error}</Alert>\n              :\n              <Alert color=\"warning\" className=\"text-center\">No results found</Alert>\n            }\n            \n            <Button color=\"primary\" onClick={() => { that.showAddForm(); }}>Add</Button>\n            </Col>\n          }\n\n          { listItems && listItems.length > 0 &&\n            <Row>\n            <Col sm=\"3\">\n              <Nav vertical pills>\n                {listItems}\n              </Nav>\n            </Col>\n            <Col sm=\"9\">\n              <Jumbotron>\n                {listTabs}\n              </Jumbotron>\n            </Col>\n            </Row>}\n            </div>\n          }\n        </Container>\n\n        \n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}