{"ast":null,"code":"import _classCallCheck from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/var/www/html/myapp/src/ActionPanel.js\";\nimport React, { Component } from 'react'; //import tasks from './tasks1.json';\n\nimport './App.css';\nimport Prism from 'prismjs';\nimport \"./prism.css\";\nimport { HtmlRenderer, Parser } from 'commonmark';\nimport { Container, Row, Col, Jumbotron, TabContent, TabPane, Nav, NavItem, NavLink, Dropdown, DropdownItem, DropdownToggle, DropdownMenu, Alert, Progress, ButtonGroup, Button, Form, FormGroup, Label, Input } from 'reactstrap';\n\nvar ActionPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ActionPanel, _Component);\n\n  function ActionPanel(props) {\n    _classCallCheck(this, ActionPanel);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ActionPanel).call(this));\n  }\n\n  _createClass(ActionPanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Prism.highlightAll();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var task = this.props.tasks[this.props.curTask];\n      var state = this.state;\n      var parser = new Parser();\n      var renderer = new HtmlRenderer();\n      var ins = renderer.render(parser.parse(task.instructions));\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"taskName\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Col, {\n        sm: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(Input, {\n        disabled: task.editMode,\n        value: task.taskName,\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"taskName\",\n        id: \"taskName\",\n        placeholder: \"Enter task name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: task.status,\n        onChange: this.handleChange,\n        type: \"select\",\n        name: \"status\",\n        id: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Open\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Open\"), React.createElement(\"option\", {\n        value: \"Closed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Closed\")))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"dueDate\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Due\"), React.createElement(Col, {\n        sm: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: task.dueDate,\n        onChange: this.handleChange,\n        type: \"date\",\n        name: \"dueDate\",\n        id: \"dueDate\",\n        placeholder: \"Enter due date\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: task.dueTime,\n        onChange: this.handleChange,\n        type: \"time\",\n        name: \"dueTime\",\n        id: \"dueTime\",\n        placeholder: \"Enter due time\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Input, {\n        rows: 10,\n        value: state.instructions,\n        onChange: this.handleChange,\n        type: \"textarea\",\n        name: \"instructions\",\n        id: \"instructions\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }))), state.error !== '' && React.createElement(Alert, {\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Error: \", state.error), React.createElement(FormGroup, {\n        check: true,\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Commit\"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.showAddForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Cancel\"))))), React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        className: \"language-markup\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: ins\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return ActionPanel;\n}(Component);\n\nexport default ActionPanel;","map":{"version":3,"sources":["/var/www/html/myapp/src/ActionPanel.js"],"names":["React","Component","Prism","HtmlRenderer","Parser","Container","Row","Col","Jumbotron","TabContent","TabPane","Nav","NavItem","NavLink","Dropdown","DropdownItem","DropdownToggle","DropdownMenu","Alert","Progress","ButtonGroup","Button","Form","FormGroup","Label","Input","ActionPanel","props","highlightAll","task","tasks","curTask","state","parser","renderer","ins","render","parse","instructions","handleSubmit","editMode","taskName","handleChange","status","dueDate","dueTime","error","showAddForm","__html"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import tasks from './tasks1.json';\nimport './App.css';\nimport Prism from 'prismjs';\nimport \"./prism.css\";\nimport { HtmlRenderer, Parser } from 'commonmark';\nimport { \n  Container,Row,Col,Jumbotron,\n  TabContent, TabPane,Nav, NavItem, NavLink,\n  Dropdown, DropdownItem, DropdownToggle, DropdownMenu, \n  Alert,Progress,\n  ButtonGroup,Button,\n  Form, FormGroup, Label, Input,\n} from 'reactstrap';\n\n\nclass ActionPanel extends Component {\n  constructor(props) {\n    super();\n  }\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  \n\n  render() {\n    let task = this.props.tasks[this.props.curTask];\n    let state = this.state;\n    let parser = new Parser()\n    let renderer = new HtmlRenderer()\n    let ins = renderer.render(parser.parse(task.instructions));\n\n    return <div>\n            <Row>\n            <Col sm=\"6\">\n            <Form onSubmit={this.handleSubmit}>\n              <FormGroup row>\n                <Label for=\"taskName\" sm={3}>Name</Label>\n                <Col sm={5}>\n                  <Input disabled={task.editMode} value={task.taskName} onChange={this.handleChange} type=\"text\" name=\"taskName\" id=\"taskName\" placeholder=\"Enter task name\" required/>\n                </Col>\n                <Col sm=\"4\">\n                <Input value={task.status} onChange={this.handleChange} type=\"select\" name=\"status\" id=\"status\">\n                  <option value=\"Open\">Open</option>\n                  <option value=\"Closed\">Closed</option>\n                </Input>\n                </Col>\n              </FormGroup>\n              <FormGroup row>\n                <Label for=\"dueDate\" sm={3}>Due</Label>\n                <Col sm={5}>\n                  <Input value={task.dueDate} onChange={this.handleChange} type=\"date\" name=\"dueDate\" id=\"dueDate\" placeholder=\"Enter due date\" required />\n                </Col>\n                <Col sm=\"4\">\n                  <Input value={task.dueTime} onChange={this.handleChange}  type=\"time\" name=\"dueTime\" id=\"dueTime\" placeholder=\"Enter due time\" required />\n                </Col>                \n              </FormGroup>\n              {/* <FormGroup tag=\"fieldset\" row>\n                <Label for=\"status\" sm={3}>Status</Label>\n                <Col sm={9}>\n                  <Input value={this.state.status} onChange={this.handleChange} type=\"select\" name=\"status\" id=\"status\">\n                  <option value=\"Open\">Open</option>\n                  <option value=\"Closed\">Closed</option>\n                </Input>\n              </Col>\n              </FormGroup> */}\n              <FormGroup row>\n                {/* <Label for=\"instructions\" sm={3}>Instructions</Label> */}\n                <Col sm={12}>\n                  <Input rows={10} value={state.instructions} onChange={this.handleChange} type=\"textarea\" name=\"instructions\" id=\"instructions\" required />\n                </Col>\n              </FormGroup>\n              {state.error !== '' && <Alert color=\"warning\">Error: {state.error}</Alert>}\n              {/* {this.state.success && <Alert color=\"success\">Successfully Added</Alert>}   */}\n              <FormGroup check row>\n                <ButtonGroup>\n                  <Button color=\"primary\" >Commit</Button>\n                  <Button color=\"primary\" onClick={this.showAddForm}>Cancel</Button>\n                </ButtonGroup>\n              </FormGroup>\n            </Form>\n            </Col>\n            <Col sm=\"6\">\n              <div>\n                <pre>\n                  <code className=\"language-markup\">\n                  <div dangerouslySetInnerHTML={{__html: ins}}></div>\n                  </code>\n                </pre>\n              </div>\n            </Col>\n            </Row>\n            \n          </div>\n\n  }\n}\nexport default ActionPanel;\n"]},"metadata":{},"sourceType":"module"}