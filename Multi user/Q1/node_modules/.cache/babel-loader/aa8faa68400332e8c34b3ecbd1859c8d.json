{"ast":null,"code":"import _objectSpread from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/myapp/src/App.js\";\nimport React, { Component } from 'react';\nimport sampleTasks from './tasks1.json';\nimport './App.css'; //import logo from './logo.svg';\n//import { Container,Row,Col,ButtonGroup,Button,ListGroup } from 'react-bootstrap';\n//import ViewPanel from './ViewPanel.js'\n\nimport classnames from 'classnames';\nimport Prism from 'prismjs';\nimport \"./prism.css\";\nimport { HtmlRenderer, Parser } from 'commonmark';\nimport { Container, Row, Col, Jumbotron, TabContent, TabPane, Nav, NavItem, NavLink, Alert, ButtonGroup, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport 'whatwg-fetch';\nimport moment from 'moment';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      tasks: sampleTasks,\n      mode: \"view\",\n      activeTab: 0,\n      addForm: false,\n      error: '',\n      success: false,\n      deleteError: '',\n      deleteSuccess: false,\n      taskName: '',\n      dueDate: '',\n      dueTime: '00:00',\n      status: 'Open',\n      instructions: '',\n      editMode: false\n    };\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.showAddForm = _this.showAddForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Prism.highlightAll();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      Prism.highlightAll();\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"showAddForm\",\n    value: function showAddForm() {\n      this.setState({\n        addForm: !this.state.addForm,\n        editMode: false,\n        taskName: '',\n        dueDate: '',\n        dueTime: '00:00',\n        status: 'Open',\n        instructions: '',\n        error: '',\n        success: false,\n        deleteError: '',\n        deleteSuccess: false\n      });\n    }\n  }, {\n    key: \"showEditForm\",\n    value: function showEditForm(data) {\n      var dueDate = moment(data.due).utc().format('YYYY-MM-DD');\n      var dueTime = moment(data.due).utc().format('HH:mm');\n      this.setState({\n        addForm: !this.state.addForm,\n        editMode: true,\n        taskName: data[\"task-name\"],\n        status: data.status,\n        dueDate: dueDate,\n        dueTime: dueTime,\n        instructions: data.instructions\n      });\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(evt) {\n      this.setState(_defineProperty({}, evt.target.name, evt.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(event) {\n      var _this2 = this;\n\n      event.preventDefault();\n      this.setState({\n        error: '',\n        success: false\n      });\n      var elements = this.state.tasks.slice();\n\n      if (!this.state.editMode) {\n        elements.push({\n          'task-name': this.state.taskName,\n          'due': this.state.dueDate + 'T' + this.state.dueTime + ':00.000Z',\n          'status': this.state.status,\n          'instructions': this.state.instructions\n        });\n      } else {\n        var nextState = this.state.tasks.map(function (task, index) {\n          if (_this2.state.taskName === task[\"task-name\"]) {\n            return _objectSpread({}, task, {\n              \"task-name\": _this2.state.taskName,\n              due: _this2.state.dueDate + 'T' + _this2.state.dueTime + ':00.000Z',\n              status: _this2.state.status,\n              instructions: _this2.state.instructions\n            });\n          }\n\n          return task;\n        });\n        elements = nextState;\n      }\n\n      Prism.highlightAll();\n      this.setState({\n        success: true,\n        addForm: false,\n        tasks: elements\n      });\n    }\n  }, {\n    key: \"handleDelete\",\n    value: function handleDelete(data) {\n      this.setState({\n        error: '',\n        success: false\n      });\n      var tasks = this.state.tasks.filter(function (task) {\n        return data[\"task-name\"] !== task[\"task-name\"];\n      });\n      this.setState(function (state) {\n        state.tasks = tasks;\n        state.deleteSuccess = true;\n        return state;\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var that = this;\n      var listItems = this.state.tasks.map(function (item, i) {\n        return React.createElement(NavItem, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          className: classnames({\n            active: that.state.activeTab === i\n          }),\n          onClick: function onClick() {\n            that.toggle(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159\n          },\n          __self: this\n        }, item[\"task-name\"]));\n      });\n      var parser = new Parser();\n      var renderer = new HtmlRenderer();\n      var currentIns = renderer.render(parser.parse(this.state.instructions));\n      var listTabs = this.state.tasks.map(function (item, i) {\n        var ins = renderer.render(parser.parse(item.instructions));\n        var dueDate = moment(item.due).utc().format('dddd, MMMM Do YYYY, hh:mm A');\n        var active = '';\n\n        if (i === that.state.activeTab) {\n          active = 'active';\n        } else {\n          active = '';\n        }\n\n        return React.createElement(TabContent, {\n          key: i,\n          vertical: true,\n          activeTab: \"{this.state.activeTab}\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(TabPane, {\n          tabId: \"{i}\",\n          className: active,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: ins\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }), \"Status: \", item.status, \", Due: \", dueDate), React.createElement(Col, {\n          sm: \"12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181\n          },\n          __self: this\n        }, React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"primary\",\n          onClick: function onClick() {\n            that.showAddForm();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183\n          },\n          __self: this\n        }, \"Add\"), React.createElement(Button, {\n          color: \"primary\",\n          onClick: that.showEditForm.bind(that, item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184\n          },\n          __self: this\n        }, \"Update\"), React.createElement(Button, {\n          color: \"primary\",\n          onClick: that.handleDelete.bind(that, item),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185\n          },\n          __self: this\n        }, \"Delete\"))))));\n      });\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Title here\")), this.state.success && React.createElement(Alert, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Successfully Added\"), this.state.deleteError !== '' && React.createElement(Alert, {\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Error: \", this.state.deleteError), this.state.deleteSuccess && React.createElement(Alert, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Successfully Deleted\"), this.state.addForm ? // Add Form\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"taskName\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Col, {\n        sm: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, React.createElement(Input, {\n        disabled: this.state.editMode,\n        value: this.state.taskName,\n        onChange: this.handleChange,\n        type: \"text\",\n        name: \"taskName\",\n        id: \"taskName\",\n        placeholder: \"Enter task name\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.status,\n        onChange: this.handleChange,\n        type: \"select\",\n        name: \"status\",\n        id: \"status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"Open\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, \"Open\"), React.createElement(\"option\", {\n        value: \"Closed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Closed\")))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"dueDate\",\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, \"Due\"), React.createElement(Col, {\n        sm: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.dueDate,\n        onChange: this.handleChange,\n        type: \"date\",\n        name: \"dueDate\",\n        id: \"dueDate\",\n        placeholder: \"Enter due date\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })), React.createElement(Col, {\n        sm: \"4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Input, {\n        value: this.state.dueTime,\n        onChange: this.handleChange,\n        type: \"time\",\n        name: \"dueTime\",\n        id: \"dueTime\",\n        placeholder: \"Enter due time\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Input, {\n        rows: 10,\n        value: this.state.instructions,\n        onChange: this.handleChange,\n        type: \"textarea\",\n        name: \"instructions\",\n        id: \"instructions\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }))), this.state.error !== '' && React.createElement(Alert, {\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Error: \", this.state.error), React.createElement(FormGroup, {\n        check: true,\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(ButtonGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, \"Commit\"), React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.showAddForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Cancel\"))))), React.createElement(Col, {\n        sm: \"6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        dangerouslySetInnerHTML: {\n          __html: currentIns\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }))))) : // Task List with Details\n      React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, listItems && listItems.length == 0 && React.createElement(Col, {\n        sm: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, this.state.error !== '' ? React.createElement(Alert, {\n        color: \"danger\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, this.state.error) : React.createElement(Alert, {\n        color: \"warning\",\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, \"No results found\")), listItems && listItems.length > 0 && React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        vertical: true,\n        pills: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, listItems)), React.createElement(Col, {\n        sm: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, listTabs)))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/myapp/src/App.js"],"names":["React","Component","sampleTasks","classnames","Prism","HtmlRenderer","Parser","Container","Row","Col","Jumbotron","TabContent","TabPane","Nav","NavItem","NavLink","Alert","ButtonGroup","Button","Form","FormGroup","Label","Input","moment","App","props","state","tasks","mode","activeTab","addForm","error","success","deleteError","deleteSuccess","taskName","dueDate","dueTime","status","instructions","editMode","toggle","bind","showAddForm","handleChange","handleSubmit","highlightAll","tab","setState","data","due","utc","format","evt","target","name","value","event","preventDefault","elements","slice","push","nextState","map","task","index","filter","that","listItems","item","i","active","parser","renderer","currentIns","render","parse","listTabs","ins","__html","showEditForm","handleDelete","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport sampleTasks from './tasks1.json';\nimport './App.css';\n//import logo from './logo.svg';\n//import { Container,Row,Col,ButtonGroup,Button,ListGroup } from 'react-bootstrap';\n//import ViewPanel from './ViewPanel.js'\n\nimport classnames from 'classnames';\nimport Prism from 'prismjs';\nimport \"./prism.css\";\nimport { HtmlRenderer, Parser } from 'commonmark';\nimport { \n    Container,Row,Col,Jumbotron,\n    TabContent, TabPane,Nav, NavItem, NavLink,\n    Alert,ButtonGroup,Button,Form, FormGroup, Label, Input,\n} from 'reactstrap';\n\nimport 'whatwg-fetch';\nimport moment from 'moment';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state={\n      tasks:sampleTasks,\n      mode:\"view\",\n      activeTab: 0,\n      addForm:false,\n      error:'',\n      success:false,\n      deleteError:'',\n      deleteSuccess:false,\n      taskName:'',\n      dueDate:'',\n      dueTime:'00:00',\n      status:'Open',\n      instructions:'',\n      editMode:false\n    }\n    \n    this.toggle = this.toggle.bind(this);\n    this.showAddForm = this.showAddForm.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    \n  }\n\n  componentDidMount() {\n    Prism.highlightAll();\n  }\n\n  componentDidUpdate () {\n    Prism.highlightAll()\n  }\n  \n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n  \n  showAddForm(){\n    this.setState({\n      addForm: !this.state.addForm,\n      editMode:false,\n      taskName:'',\n      dueDate:'',\n      dueTime:'00:00',\n      status:'Open',\n      instructions:'',\n      error:'',\n      success:false,\n      deleteError:'',\n      deleteSuccess:false,\n    });\n  }\n\n  showEditForm (data) {\n    let dueDate = moment(data.due).utc().format('YYYY-MM-DD');\n    let dueTime = moment(data.due).utc().format('HH:mm');\n    \n    this.setState({\n       addForm: !this.state.addForm,\n       editMode:true,\n       taskName:data[\"task-name\"],\n       status:data.status,\n       dueDate:dueDate,\n       dueTime:dueTime,\n       instructions:data.instructions\n    });\n  }  \n\n  handleChange (evt) {\n    this.setState({ [evt.target.name]: evt.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();  \n    this.setState({\n      error: '',\n      success:false\n    });  \n    let elements = this.state.tasks.slice();\n    if(!this.state.editMode){\n      elements.push({\n        'task-name': this.state.taskName,\n        'due': this.state.dueDate+'T'+this.state.dueTime+':00.000Z',\n        'status': this.state.status,\n        'instructions': this.state.instructions\n      });\n    }else{\n      const nextState = this.state.tasks.map((task,index) => {\n          if(this.state.taskName === task[\"task-name\"]){\n            return {\n              ...task,\n              \"task-name\": this.state.taskName,\n              due: this.state.dueDate+'T'+this.state.dueTime+':00.000Z',\n              status: this.state.status,\n              instructions: this.state.instructions \n            }\n          }\n          return task;\n      });\n      elements = nextState;\n    }  \n    Prism.highlightAll();\n    this.setState({\n      success: true,\n      addForm:false,\n      tasks:elements\n    });\n  }\n\n  handleDelete(data) {\n    this.setState({\n      error: '',\n      success:false\n    });  \n    \n    let tasks = this.state.tasks.filter((task) => {\n      return data[\"task-name\"] !== task[\"task-name\"];\n    });\n  \n    this.setState(state => {\n        state.tasks = tasks;\n        state.deleteSuccess= true;\n        return state;\n    });\n  }\n\n  render() {\n    let that=this;\n    \n    let listItems=this.state.tasks.map(function(item,i){\n      return(\n        <NavItem key={i}><NavLink className={classnames({ active: that.state.activeTab === i })} onClick={() => { that.toggle(i); }}>\n          {item[\"task-name\"]}</NavLink></NavItem>\n      );\n    })\n    \n    let parser = new Parser()\n    let renderer = new HtmlRenderer()\n    let currentIns = renderer.render(parser.parse(this.state.instructions));\n    \n    let listTabs=this.state.tasks.map(function(item,i){\n      let ins = renderer.render(parser.parse(item.instructions));\n      let dueDate = moment(item.due).utc().format('dddd, MMMM Do YYYY, hh:mm A');\n      let active = '';\n      if(i===that.state.activeTab){ active = 'active'; }else{ active = '';}\n      \n      return(\n        <TabContent key={i} vertical activeTab=\"{this.state.activeTab}\">\n          <TabPane tabId=\"{i}\" className={active}>\n            <Row>\n              <Col sm=\"12\">\n              <div dangerouslySetInnerHTML={{__html: ins}}></div>\n              Status: {item.status}, Due: {dueDate}</Col>\n              <Col sm=\"12\">\n                <ButtonGroup>\n                  <Button color=\"primary\" onClick={() => { that.showAddForm(); }}>Add</Button>\n                  <Button color=\"primary\" onClick={that.showEditForm.bind(that, item)}>Update</Button>\n                  <Button color=\"primary\" onClick={that.handleDelete.bind(that, item)}>Delete</Button>\n                </ButtonGroup>\n              </Col>\n            </Row>\n          </TabPane>\n        </TabContent>\n    );\n  })\n\n    return(\n        <Container>\n          <Container><h1 className=\"text-center\">Title here</h1></Container>\n          {this.state.success && <Alert color=\"success\">Successfully Added</Alert>} \n          {this.state.deleteError !== '' && <Alert color=\"warning\">Error: {this.state.deleteError}</Alert>}\n          {this.state.deleteSuccess && <Alert color=\"success\">Successfully Deleted</Alert>}  \n\n          { this.state.addForm ?\n          // Add Form\n          <div>\n            <Row>\n            <Col sm=\"6\">\n              <Form onSubmit={this.handleSubmit}>\n                <FormGroup row>\n                  <Label for=\"taskName\" sm={3}>Name</Label>\n                  <Col sm={5}>\n                    <Input disabled={this.state.editMode} value={this.state.taskName} onChange={this.handleChange} type=\"text\" name=\"taskName\" id=\"taskName\" placeholder=\"Enter task name\" required/>\n                  </Col>\n                  <Col sm=\"4\">\n                    <Input value={this.state.status} onChange={this.handleChange} type=\"select\" name=\"status\" id=\"status\">\n                      <option value=\"Open\">Open</option>\n                      <option value=\"Closed\">Closed</option>\n                    </Input>\n                  </Col>\n                </FormGroup>\n              <FormGroup row>\n                <Label for=\"dueDate\" sm={3}>Due</Label>\n                <Col sm={5}>\n                  <Input value={this.state.dueDate} onChange={this.handleChange} type=\"date\" name=\"dueDate\" id=\"dueDate\" placeholder=\"Enter due date\" required />\n                </Col>\n                <Col sm=\"4\">\n                  <Input value={this.state.dueTime} onChange={this.handleChange}  type=\"time\" name=\"dueTime\" id=\"dueTime\" placeholder=\"Enter due time\" required />\n                </Col>                \n              </FormGroup>\n              <FormGroup row>\n                <Col sm={12}>\n                  <Input rows={10} value={this.state.instructions} onChange={this.handleChange} type=\"textarea\" name=\"instructions\" id=\"instructions\" required />\n                </Col>\n              </FormGroup>\n              {this.state.error !== '' && <Alert color=\"warning\">Error: {this.state.error}</Alert>}\n              {/* {this.state.success && <Alert color=\"success\">Successfully Added</Alert>}   */}\n              <FormGroup check row>\n                <ButtonGroup>\n                  <Button color=\"primary\" >Commit</Button>\n                  <Button color=\"primary\" onClick={this.showAddForm}>Cancel</Button>\n                </ButtonGroup>\n              </FormGroup>\n            </Form>\n            </Col>\n            <Col sm=\"6\">\n              <div><div dangerouslySetInnerHTML={{__html: currentIns}}></div></div>\n            </Col>\n            </Row>\n          </div>\n          :\n          // Task List with Details\n          <div>\n          { listItems && listItems.length == 0 &&\n            <Col sm=\"12\">{ this.state.error !== '' ? \n              <Alert color=\"danger\" className=\"text-center\">{this.state.error}</Alert> : \n              <Alert color=\"warning\" className=\"text-center\">No results found</Alert>}\n            </Col>\n          }\n          { listItems && listItems.length > 0 &&\n            <Row>\n              <Col sm=\"3\"><Nav vertical pills>{listItems}</Nav></Col>\n              <Col sm=\"9\"><Jumbotron>{listTabs}</Jumbotron></Col>\n            </Row>\n          }\n          </div>\n        }\n        </Container>\n\n        \n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}