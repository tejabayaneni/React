{"ast":null,"code":"import _classCallCheck from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/var/www/html/myapp/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/var/www/html/myapp/src/App.js\";\nimport React, { Component } from 'react';\nimport sampleTasks from './tasks1.json';\nimport logo from \"./logo.svg\";\nimport './App.css'; //import { Container,Row,Col,ButtonGroup,Button,ListGroup } from 'react-bootstrap';\n//import ViewPanel from './ViewPanel.js'\n\nimport classnames from 'classnames';\nimport Prism from 'prismjs';\nimport \"./prism.css\";\nimport { HtmlRenderer, Parser } from 'commonmark';\nimport { Container, Row, Col, Jumbotron, TabContent, TabPane, Nav, NavItem, NavLink, Dropdown, DropdownItem, DropdownToggle, DropdownMenu, Alert, Progress, ButtonGroup, Button } from 'reactstrap';\nimport 'whatwg-fetch';\nimport config from './config.js';\nimport moment from 'moment';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      tasks: sampleTasks,\n      curTask: 0,\n      mode: \"view\",\n      activeTab: 0,\n      //tasks:[],\n      loadingTasks: false,\n      addForm: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Prism.highlightAll();\n      this.setState({\n        loadingTasks: true\n      }); // let url = config.API_URL+'tasks';\n      // fetch(url,{}).then(res => res.json())\n      // .then(json => {\n      //   console.log('enter',json);\n      //   this.setState({\n      //     tasks: json.tasks,\n      //     loadingTasks:false\n      //   });\n      // }, error =>{\n      //   this.setState({ loadingTasks:false});\n      //   console.log('err',error);\n      // });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle(tab) {\n      if (this.state.activeTab !== tab) {\n        this.setState({\n          activeTab: tab\n        });\n      }\n    }\n  }, {\n    key: \"showAddForm\",\n    value: function showAddForm() {\n      this.setState({\n        addForm: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('enter', this.state.activeTab); //let curTask = this.state.tasks[this.state.activeTab];\n      //let curIns = this.state.tasks[this.state.activeTab].instructions;\n\n      var that = this;\n      var listItems = this.state.tasks.map(function (item, i) {\n        return React.createElement(NavItem, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          className: classnames({\n            active: that.state.activeTab === i\n          }),\n          onClick: function onClick() {\n            that.toggle(i);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, item[\"task-name\"]));\n      });\n      var parser = new Parser();\n      var renderer = new HtmlRenderer(); //let ins = renderer.render(parser.parse(curTask.instructions));\n\n      var listTabs = this.state.tasks.map(function (item, i) {\n        var ins = renderer.render(parser.parse(item.instructions));\n        var active = '';\n\n        if (i === that.state.activeTab) {\n          active = 'active';\n        } else {\n          active = '';\n        }\n\n        var dueDate = moment(item.due).format('dddd, MMMM Do YYYY, hh:mm A');\n        return React.createElement(TabContent, {\n          vertical: true,\n          activeTab: \"{this.state.activeTab}\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(TabPane, {\n          tabId: \"{i}\",\n          className: active,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(Col, {\n          sm: \"12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, React.createElement(\"pre\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"code\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          dangerouslySetInnerHTML: {\n            __html: ins\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }))), \"Status: \", item.status, \", Due: \", dueDate), React.createElement(Col, {\n          sm: \"12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(ButtonGroup, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"primary\",\n          onClick: function onClick() {\n            that.showAddForm();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"Add\"), React.createElement(Button, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"Update\"), React.createElement(Button, {\n          color: \"primary\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Delete\"))))));\n      });\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Title here\")), listItems && listItems.length > 0 && React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        vertical: true,\n        pills: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, listItems)), React.createElement(Col, {\n        sm: \"9\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, listTabs))), this.state.addForm && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Test\"));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/var/www/html/myapp/src/App.js"],"names":["React","Component","sampleTasks","classnames","Prism","HtmlRenderer","Parser","Container","Row","Col","Jumbotron","TabContent","TabPane","Nav","NavItem","NavLink","Dropdown","DropdownItem","DropdownToggle","DropdownMenu","Alert","Progress","ButtonGroup","Button","config","moment","App","props","toggle","bind","state","tasks","curTask","mode","activeTab","loadingTasks","addForm","highlightAll","setState","tab","console","log","that","listItems","map","item","i","active","parser","renderer","listTabs","ins","render","parse","instructions","dueDate","due","format","__html","status","showAddForm","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport sampleTasks from './tasks1.json';\nimport logo from './logo.svg';\nimport './App.css';\n//import { Container,Row,Col,ButtonGroup,Button,ListGroup } from 'react-bootstrap';\n//import ViewPanel from './ViewPanel.js'\n\nimport classnames from 'classnames';\nimport Prism from 'prismjs';\nimport \"./prism.css\";\nimport { HtmlRenderer, Parser } from 'commonmark';\nimport { \n    Container,Row,Col,Jumbotron,\n    TabContent, TabPane,Nav, NavItem, NavLink,\n    Dropdown, DropdownItem, DropdownToggle, DropdownMenu, \n    Alert,Progress,\n    ButtonGroup,Button \n} from 'reactstrap';\nimport 'whatwg-fetch';\nimport config from './config.js';\nimport moment from 'moment';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.toggle = this.toggle.bind(this);\n    this.state={\n      tasks:sampleTasks,\n      curTask:0,\n      mode:\"view\",\n      activeTab: 0,\n      //tasks:[],\n      loadingTasks: false,\n      addForm:false\n    }\n    \n  }\n\n  componentDidMount() {\n    Prism.highlightAll();\n    \n    this.setState({ loadingTasks:true});\n\n    // let url = config.API_URL+'tasks';\n    // fetch(url,{}).then(res => res.json())\n    // .then(json => {\n    //   console.log('enter',json);\n    //   this.setState({\n    //     tasks: json.tasks,\n    //     loadingTasks:false\n    //   });\n    // }, error =>{\n    //   this.setState({ loadingTasks:false});\n    //   console.log('err',error);\n    // });\n  }\n\n  toggle(tab) {\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n  \n  showAddForm(){\n    this.setState({\n      addForm: true\n    });\n  }\n\n  render() {\n    console.log('enter',this.state.activeTab);\n    //let curTask = this.state.tasks[this.state.activeTab];\n    //let curIns = this.state.tasks[this.state.activeTab].instructions;\n    let that=this;\n    let listItems=this.state.tasks.map(function(item,i){\n      return(\n        <NavItem key={i}>\n          <NavLink\n            className={classnames({ active: that.state.activeTab === i })}\n            onClick={() => { that.toggle(i); }}\n          >\n            {item[\"task-name\"]}\n          </NavLink>\n        </NavItem>\n      );\n    })\n    \n    let parser = new Parser()\n    let renderer = new HtmlRenderer()\n    //let ins = renderer.render(parser.parse(curTask.instructions));\n    \n    let listTabs=this.state.tasks.map(function(item,i){\n      let ins = renderer.render(parser.parse(item.instructions));\n      let active = '';\n      if(i===that.state.activeTab){\n        active = 'active';\n      }else{\n        active = '';\n      }\n      let dueDate = moment(item.due).format('dddd, MMMM Do YYYY, hh:mm A');\n      \n      return(\n        <TabContent vertical activeTab=\"{this.state.activeTab}\">\n        <TabPane tabId=\"{i}\" className={active}>\n          <Row>\n            <Col sm=\"12\">\n            <pre>\n            <code >\n            {/* {curTask.instructions} */}\n            <div dangerouslySetInnerHTML={{__html: ins}}></div>\n            </code>\n            </pre>\n            Status: {item.status}, Due: {dueDate}\n            \n              {/* <h4>{curTask.instructions}</h4> */}\n            </Col>\n            <Col sm=\"12\">\n              <ButtonGroup>\n                <Button color=\"primary\" onClick={() => { that.showAddForm(); }}>Add</Button>\n                <Button color=\"primary\">Update</Button>\n                <Button color=\"primary\">Delete</Button>\n              </ButtonGroup>\n            </Col>\n          </Row>\n        </TabPane>\n        </TabContent>\n    );\n  })\n\n    return(\n        <Container>\n          <Container><h1 className=\"text-center\">Title here</h1></Container>\n          \n          {/* { this.state.loadingTasks && \n            <Progress animated color=\"warning\" value=\"100\" />\n          }\n          \n          { listItems && listItems.length == 0 &&\n            <Alert color=\"warning\" className=\"text-center\">No results found</Alert>\n          } */}\n\n          { listItems && listItems.length > 0 &&\n          <Row>\n          <Col sm=\"3\">\n            <Nav vertical pills>\n              {listItems}\n            </Nav>\n          </Col>\n          <Col sm=\"9\">\n            <Jumbotron>\n              {listTabs}\n            </Jumbotron>\n          </Col>\n          </Row>}\n\n          { this.state.addForm && \n          <div>\n            Test\n          </div>\n          }\n        </Container>\n\n        \n    );\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}